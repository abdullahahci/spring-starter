package com.ahci.springstarter.admin.controllers;

import java.util.ArrayList;
import java.util.Locale;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ahci.springstarter.admin.models.User;
import com.ahci.springstarter.admin.repositories.UserRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/admin/users") // This means URL's start with /demo (after Application path)
public class UserController extends BaseController{
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	private static final Logger logger = LoggerFactory.getLogger(UserController.class);
	
	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User user = new User();
		user.setName(name);
		user.setEmail(email);
		userRepository.save(user);
		
		logger.info("User saved:" + user);
		return "Saved";
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
	
	@GetMapping(path="/")
	public String index(Model model) {
		// This returns a JSON or XML with the users
		
		ArrayList<User> userList = new ArrayList<User>();
		userRepository.findAll().forEach(userList::add);
		model.addAttribute("users", userList)
			.addAttribute("TITLE", getMessage("users.title"));
		return "users/index";
	}
	
}