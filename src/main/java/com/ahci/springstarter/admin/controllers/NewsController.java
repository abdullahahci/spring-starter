package com.ahci.springstarter.admin.controllers;

import java.util.ArrayList;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ahci.springstarter.admin.models.User;
import com.ahci.springstarter.admin.repositories.AdminNewsRepository;
import com.ahci.springstarter.core.content.News;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/admin/news") // This means URL's start with /demo (after Application path)
public class NewsController extends BaseController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private AdminNewsRepository newsRepository;

	@RequestMapping(path="/add", method = RequestMethod.POST) // Map ONLY GET Requests
	public @ResponseBody String addNews (@Valid @ModelAttribute("employee")News news, 
		      BindingResult result, ModelMap model) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		
//		News news = 
//		User n = new User();
//		n.setName(name);
//		n.setEmail(email);
		
		if (result.hasErrors()) {
            return "error";
        }
		
        return "saved";
	}

	@GetMapping(path="/")
	public String index(Model model) {
		// This returns a JSON or XML with the users
		ArrayList<News> newsList = new ArrayList<News>();
		newsRepository.findAll().forEach(newsList::add);
		
		model.addAttribute("newsList", newsList)
			 .addAttribute("TITLE", getMessage("news.title"));
		
		return "users/index";
	}
	
}